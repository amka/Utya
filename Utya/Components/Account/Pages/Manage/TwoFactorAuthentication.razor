@page "/Account/Manage/TwoFactorAuthentication"

@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity
@using Utya.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Two-factor authentication (2FA)</PageTitle>

<StatusMessage/>

<h3 class="text-2xl mb-4">Two-factor authentication (2FA)</h3>
@if (_canTrack)
{
    if (_is2FaEnabled)
    {
        <div class="my-4 flex flex-col gap-2 max-w-100">
            @switch (_recoveryCodesLeft)
            {
                case 0:
                    <div class="alert alert-error alert-soft">
                        <strong>You have no recovery codes left.</strong>
                        <p>You must <a href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery
                                codes</a> before you can log in with a recovery code.</p>
                    </div>
                    break;
                case 1:
                    <div class="alert alert-error alert-soft">
                        <strong>You have 1 recovery code left.</strong>
                        <p>You can <a href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery
                                codes</a>.</p>
                    </div>
                    break;
                case <= 3:
                    <div class="alert alert-warning alert-soft">
                        <strong>You have @_recoveryCodesLeft recovery codes left.</strong>
                        <p>You should <a href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery
                                codes</a>.</p>
                    </div>
                    break;
            }

            @if (_isMachineRemembered)
            {
                <form @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post" class="w-full">
                    <AntiforgeryToken/>
                    <button type="submit" class="btn btn-primary rounded-lg btn-block">Forget this browser</button>
                </form>
            }

            <a href="Account/Manage/Disable2fa" class="btn btn-primary rounded-lg">Disable 2FA</a>
            <a href="Account/Manage/GenerateRecoveryCodes" class="btn btn-primary rounded-lg">Reset recovery codes</a>
        </div>
    }

    <h4 class="text-xl">Authenticator app</h4>
    <div class="mt-4 flex flex-col gap-2 max-w-100">
        @if (!_hasAuthenticator)
        {
            <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary rounded-lg">Add authenticator app</a>
        }
        else
        {
            <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary rounded-lg">Set up authenticator app</a>
            <a href="Account/Manage/ResetAuthenticator" class="btn btn-primary rounded-lg">Reset authenticator app</a>
        }
    </div>
}
else
{
    <div class="alert alert-warning alert-soft">
        <strong>Privacy and cookie policy have not been accepted.</strong>
        <p>You must accept the policy before you can enable two factor authentication.</p>
    </div>
}

@code {
    private bool _canTrack;
    private bool _hasAuthenticator;
    private int _recoveryCodesLeft;
    private bool _is2FaEnabled;
    private bool _isMachineRemembered;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        _canTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
        _hasAuthenticator = await UserManager.GetAuthenticatorKeyAsync(user) is not null;
        _is2FaEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        _isMachineRemembered = await SignInManager.IsTwoFactorClientRememberedAsync(user);
        _recoveryCodesLeft = await UserManager.CountRecoveryCodesAsync(user);
    }

    private async Task OnSubmitForgetBrowserAsync()
    {
        await SignInManager.ForgetTwoFactorClientAsync();

        RedirectManager.RedirectToCurrentPageWithStatus(
            "The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.",
            HttpContext);
    }
}