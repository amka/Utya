@if (!string.IsNullOrEmpty(DisplayMessage))
{
    var statusMessageClass = DisplayMessage.StartsWith("Error") ? "warning" : "success";
    <dvi class="mb-4">
        <div class="alert alert-@statusMessageClass text-@statusMessageClass-content" role="alert">
            @switch (statusMessageClass)
            {
                case "warning":
                    <i class="fa-solid fa-triangle-exclamation text-xl"></i>
                    break;
                case "success":
                    <i class="fa-solid fa-check text-xl"></i>
                    break;
            }
            <span>
            @DisplayMessage
        </span>
        </div>
    </dvi>
}

@code {
    private string? messageFromCookie;

    [Parameter] public string? Message { get; set; }

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage => Message ?? messageFromCookie;

    protected override void OnInitialized()
    {
        messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

        if (messageFromCookie is not null)
        {
            HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
        }
    }

}
