@using Microsoft.AspNetCore.Components.Sections
@using Utya.Components.Account
@using Utya.Data
@using Utya.Services
@implements IDisposable

@inherits LayoutComponentBase

@inject IdentityUserAccessor UserAccessor
@inject ILimitService LimitService
@inject NavigationManager NavigationManager

<div class="drawer lg:drawer-open overflow-hidden">
  <input id="app-drawer" type="checkbox" class="drawer-toggle"/>
  <div class="drawer-content overflow-y-scroll">

    <div class="navbar px-4 w-full gap-2">
      <div class="flex flex-1 items-center gap-2">
        <label for="app-drawer" class="btn btn-square btn-ghost drawer-button lg:hidden">
          <i class="fas fa-bars"></i>
        </label>
        <div class="flex justify-between flex-grow">
          <SectionOutlet SectionName="top-bar"/>
        </div>
      </div>
    </div>

    @if (User != null)
    {
      <CascadingValue Value="User">
        <main class="page flex flex-grow">
          @Body
        </main>
      </CascadingValue>
    }
  </div>

  <div class="drawer-side overflow-y-scroll">
    <label for="app-drawer" aria-label="close sidebar" class="drawer-overlay"></label>
    <div class="bg-base-300 text-base-content min-h-full w-60 flex flex-col">
      <CascadingValue Value="Limits">
        <AppDrawer/>
      </CascadingValue>
    </div>
  </div>
</div>

@* <div style="bottom:0 !important;position: fixed !important;"> *@
@*   <div class="dock md:hidden flex justify-evenly bg-base-100 w-screen p-2"> *@
@*     <NavLink ActiveClass="dock-active" href="App" Match="NavLinkMatch.All" class="text-center"> *@
@*       <span class="block text-2xl"><i class="fa-solid fa-house-chimney"></i></span> *@
@*       <span class="dock-label">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span> *@
@*     </NavLink> *@
@* *@
@*     <NavLink ActiveClass="dock-active" href="App/Links" Match="NavLinkMatch.All" class="text-center"> *@
@*       <span class="block text-2xl"><i class="fa-solid fa-link"></i></span> *@
@*       <span class="dock-label">–°—Å—ã–ª–∫–∏</span> *@
@*     </NavLink> *@
@* *@
@*     <NavLink ActiveClass="dock-active" href="Account/Manage" Match="NavLinkMatch.All" class="text-center"> *@
@*       <span class="block text-2xl"><i class="fa-solid fa-user"></i></span> *@
@*       <span class="dock-label">–ü—Ä–æ—Ñ–∏–ª—å</span> *@
@*     </NavLink> *@
@*   </div> *@
@* </div> *@

<div id="blazor-error-ui" data-nosnippet>
  An unhandled error has occurred.
  <a href="." class="reload">Reload</a>
  <span class="dismiss">üóô</span>
</div>

@code
{
  private string? _currentUrl;
  private LimitStatus? Limits { get; set; }
  private ApplicationUser? User { get; set; }

  [CascadingParameter] private HttpContext HttpContext { get; set; } = null!;

  protected override async Task OnInitializedAsync()
  {
    _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    NavigationManager.LocationChanged += OnLocationChanged;

    User = await UserAccessor.GetRequiredUserAsync(HttpContext);
    Limits = await LimitService.GetCurrentLimitsAsync(User.Id);
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
    _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    StateHasChanged();
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }
}
